syntax = "proto3";

package pinax.substreams.sink.prometheus.v1;

option go_package = "github.com/pinax-network/substreams-sink-prometheus/pb;pbkv";

// List of Prometheus metrics
message Metrics {
  repeated Metric metrics = 1;
}

message Metric {
  string type = 1;                // Prometheus metric type (COUNTER, GAUGE, HISTOGRAM, SUMMARY)
  string operation = 2;           // Prometheus metric operation (SET, INC, DEC, ADD, SUB, SET_TO_CURRENT_TIME, RESET)
  string name = 3;                // Name of the Prometheus metric
  double value = 4;               // Value (Float) to be used in the operation
  repeated string labels = 5;     // Labels to be used in the Gauge or Counter
}

// message Metric {
//   oneof metric {
//     // Prometheus metric of type 'Counter'
//     Counter counter = 1;
//     // // Prometheus metric of type 'Gauge'
//     // Gauge gauge = 2;

//     // // Prometheus metric of type 'Histogram'
//     // Histogram histogram = 3;
//     // // // Prometheus metric of type 'Summary'
//     // Summary summary = 4;
//   }
// }

// message Counter {
//   string name = 1;                // Name of the Prometheus metric
//   optional double value = 2;      // Value (Float) to be used in the operation
//   repeated string labels = 3;     // Labels to be used in the Gauge or Counter
//   enum Operation {
//     // Protobuf default should not be used, this is used so that the consume can ensure that the value was actually specified
//     UNSPECIFIED = 0;
//     // Increments the Counter by 1.
//     INC = 1;
//     // Adds an arbitrary value to a Counter. (Returns an error if the value is < 0.)
//     ADD = 2; // float
//   }
//   Operation operation = 4;        // Prometheus metric operation
// }

// message Gauge {
//   string name = 1;                // Name of the Prometheus metric
//   optional double value = 2;      // Value (Float) to be used in the operation
//   repeated string labels = 3;     // Labels to be used in the Gauge or Counter
//   enum Operation {
//     // Protobuf default should not be used, this is used so that the consume can ensure that the value was actually specified
//     UNSPECIFIED = 0;
//     // Set sets the Gauge to an arbitrary value. 
//     SET = 1; // float
//     // Inc increments the Gauge by 1. Use Add to increment it by arbitrary values.
//     INC = 2;
//     // Dec decrements the Gauge by 1. Use Sub to decrement it by arbitrary values.
//     DEC = 3;
//     // Add adds the given value to the Gauge. (The value can be negative, resulting in a decrease of the Gauge.)
//     ADD = 4; // float
//     // Sub subtracts the given value from the Gauge. (The value can be negative, resulting in an increase of the Gauge.)
//     SUB = 5; // float
//     // SetToCurrentTime sets the Gauge to the current Unix time in seconds.
//     SET_TO_CURRENT_TIME = 7;
//     // Reset metric
//     RESET = 8;
//   }
//   Operation operation = 4;        // Prometheus metric operation
//   optional string help = 5;       // Help text to be used to define Gauge or Counter
// }
